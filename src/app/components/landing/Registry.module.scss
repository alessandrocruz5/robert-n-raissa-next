// Registry.module.scss
@mixin respond-to($breakpoint) {
  @if $breakpoint == "1500" {
    @media (max-width: 1500px) {
      @content;
    }
  }
  @if $breakpoint == "1200" {
    @media (max-width: 1200px) {
      @content;
    }
  }
  @if $breakpoint == "900" {
    @media (max-width: 900px) {
      @content;
    }
  }
  @if $breakpoint == "800" {
    @media (max-width: 800px) {
      @content;
    }
  }
  @if $breakpoint == "700" {
    @media (max-width: 700px) {
      @content;
    }
  }
  @if $breakpoint == "600" {
    @media (max-width: 600px) {
      @content;
    }
  }
  @if $breakpoint == "500" {
    @media (max-width: 500px) {
      @content;
    }
  }
  @if $breakpoint == "300" {
    @media (max-width: 300px) {
      @content;
    }
  }
}

.container {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
  padding: 6rem 0;
  font-family: "Playfair Display", serif;
}

.contentContainer {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 60vh; // Set minimum height for content area

  @include respond-to("800") {
    height: 100vh; // Set a fixed height for the container
  }
}

.content {
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
  width: 100%;
  text-align: center;
  padding: 2rem;
  color: white;

  h2 {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 2rem;
  }

  p {
    width: 60%;
    margin: 0 auto;
    font-size: 1.5rem;
    margin-bottom: 1.5rem;

    &:last-child {
      margin-bottom: 5rem;
    }
  }

  @include respond-to("1500") {
    h2 {
      font-size: 2.5rem;
    }

    p {
      font-size: 1.2rem;
    }
  }

  @include respond-to("1200") {
    h2 {
      font-size: 2.2rem;
      margin-bottom: 2rem;
    }

    p {
      font-size: 1rem;
      margin-bottom: 2rem;

      &:last-child {
        margin-bottom: 3rem;
      }
    }
  }

  @include respond-to("800") {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
    margin-top: 0;
    width: 100%;
    padding: 3rem;

    h2 {
      font-size: 3rem;
      margin-bottom: 5rem;
    }

    p {
      font-size: 1.4rem;
      width: 90%;
      margin-bottom: 1.5rem;

      &:last-child {
        margin-bottom: 2rem;
      }
    }
  }
}

.qrSection {
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  margin-bottom: 10rem;

  .registryImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: brightness(50%);
    min-height: 60vh;

    @include respond-to("800") {
      height: 100vh; // Match parent height
    }
  }

  .qrCodesContainer {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.5rem;
    padding: 2rem;
    margin: 2rem;
    place-items: center;
    position: absolute;
    top: 60%;

    @include respond-to("800") {
      position: relative;
      bottom: auto;
      left: auto;
      transform: none;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
      max-width: 800px;
      margin: 2rem auto;
    }

    @include respond-to("500") {
      grid-template-columns: 1fr;
      max-width: 400px;
      gap: 1rem;
      padding: 1rem;
    }
  }

  .qrCode {
    width: 100%;
    max-width: 400px;
    padding: 0.5rem;
    border-top-left-radius: 1.5rem;
    border-top-right-radius: 1.5rem;
    display: flex;
    justify-content: center;
    align-items: center;

    @include respond-to("800") {
      width: 300px; // Smaller QR codes on mobile
    }

    @include respond-to("700") {
      width: 250px;
    }

    @include respond-to("500") {
      width: 300px;
    }

    @include respond-to("600") {
      width: 200px;
    }

    img {
      width: 100%;
      height: auto;
    }
  }

  @include respond-to("800") {
    margin-bottom: 0;
  }
}
